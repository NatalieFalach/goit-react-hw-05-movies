{"version":3,"file":"static/js/33.55d908bf.chunk.js","mappings":"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","sources":["api/MovieDbApi.js","helpers/getImageUrl.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '8b8b26a0b27e03ef23871d035772175e';\n\nexport async function getTrending(page = 1) {\n  const { data: response } = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response;\n}\n\nexport async function getFilmById(id) {\n  const { data: response } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getCastById(id) {\n  const { data: response } = await axios.get(`movie/${id}/credit`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getReviewsById(id) {\n  const { data: response } = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getMovieBySearch(search) {\n  const { data: response } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n  return response;\n}\n","export default function getImageUrl(imageName) {\n  return imageName\n    ? `https://image.tmdb.org/t/p/w500/${imageName}`\n    : 'https://via.placeholder.com/150/d3d3d3/ffffff?text=No++photo';\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const Wrapper = styled.div`\n  display: block;\n  margin-left: 30px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const Info = styled.p`\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const SubMenu = styled.ul`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 15px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 0;\n  width: 150px;\n  background: lightgray;\n  outline: none;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background: orangered;\n  }\n`;\n\nexport const ButtonBack = styled.button`\n  padding: 8px 0;\n  margin-bottom: 5px;\n  width: 100px;\n  background: lightgray;\n  outline: none;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background: orangered;\n  }\n`;\n","import { getFilmById } from \"../../api/MovieDbApi\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Container, Wrapper, Img, Info, StyledLink, Button, SubMenu ,ButtonBack} from './MovieDetails.styled';\nimport { Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport getImageUrl from \"helpers/getImageUrl\";\nimport Spinner from \"components/Spinner/Spinner\";\n\nconst MovieDetails = () => {\n  const { filmId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getFilmById(filmId).then((data) => {\n     setData(data);\n    }).catch((error) => {\n      console.log(error.message)\n    }).finally(() => {\n      setIsLoading(false);\n    })\n  }, [filmId])\n\n  const getGenres = (genres) => {\n    return genres.map((item) => item.name).join(', ');\n  }\n\n  return (\n    <>\n      <StyledLink to={backLinkHref}><ButtonBack>Back</ButtonBack></StyledLink>\n      {isLoading && <Spinner/>}\n      {data && (\n        <Container>\n          <Img src={getImageUrl(data.poster_path)} alt={data.title} />\n          <Wrapper>\n            <h2>{data.title} ({new Date(data.release_date).getFullYear()})</h2>\n            <Info>User Score: {Math.round(data.vote_average * 10)}%</Info>\n            <h3>Overview</h3>\n            <Info>{ data.overview}</Info>\n            <h4>Genres</h4>\n            <Info>{getGenres(data.genres)}</Info>\n            <SubMenu>\n              <li><StyledLink to=\"cast\" state={{from: backLinkHref}}><Button>Cast</Button></StyledLink></li>\n              <li><StyledLink to=\"reviews\" state={{from: backLinkHref}}><Button>Reviews</Button></StyledLink></li>\n            </SubMenu>\n          </Wrapper>\n        </Container>\n      )}\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </>\n  )\n};\n\nexport default MovieDetails;\n\n\n"],"names":["axios","API_KEY","getTrending","page","params","api_key","response","data","getFilmById","id","getCastById","getReviewsById","getMovieBySearch","search","query","getImageUrl","imageName","Container","styled","Wrapper","Img","Info","SubMenu","StyledLink","Link","Button","ButtonBack","filmId","useParams","useState","isLoading","setIsLoading","setData","backLinkHref","useLocation","state","from","useEffect","then","catch","error","console","log","message","finally","genres","to","Spinner","src","poster_path","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","map","item","name","join","Suspense","fallback"],"sourceRoot":""}