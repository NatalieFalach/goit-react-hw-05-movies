{"version":3,"file":"static/js/304.e65895ce.chunk.js","mappings":"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","sources":["api/MovieDbApi.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","helpers/getImageUrl.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '8b8b26a0b27e03ef23871d035772175e';\n\nexport async function getTrending(page = 1) {\n  const { data: response } = await axios.get(`/trending/movie/week`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response;\n}\n\nexport async function getFilmById(id) {\n  const { data: response } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getCastById(id) {\n  const { data: response } = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getReviewsById(id) {\n  const { data: response } = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getMovieBySearch(search, page = 1) {\n  const { data: response } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n      page: page,\n    },\n  });\n  return response;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmItem = styled.li`\n  margin-bottom: 20px;\n  width: 200px;\n  text-decoration: none;\n  text-align: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-weight: 500;\n  color: black;\n  cursor: pointer;\n\n  &:hover {\n    color: orangered;\n  }\n`;\nexport const Poster = styled.img`\n  display: block;\n  margin-bottom: 15px;\n  width: 200px;\n  height: 300px;\n`;\nexport const Container = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n`;\n","import { FilmItem, StyledLink, Poster, Container } from './FilmList.styled';\nimport PropTypes from 'prop-types';\nimport getImageUrl from 'helpers/getImageUrl';\nimport { useLocation } from 'react-router-dom';\nconst FilmList = ({films}) => {\n  const location = useLocation();\n  \n  return (\n    <Container>\n      {films.map((film, index) => {\n        return (\n          <FilmItem key={film.id}>\n            <StyledLink to={`/movies/${film.id}`} state={{ from: location }}>\n              <Poster src={getImageUrl(film.poster_path)} alt={film.title} /> \n              {film.title || film.name}\n            </StyledLink>\n          </FilmItem  >\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default FilmList;\n\nFilmList.propTypes = {\n  films:PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string\n  })).isRequired,\n}","export default function getImageUrl(imageName) {\n  return imageName\n    ? `https://image.tmdb.org/t/p/w500${imageName}`\n    : 'https://via.placeholder.com/150/d3d3d3/ffffff?text=No++photo';\n}\n","import styled from 'styled-components';\n\nexport const Trending = styled.h2`\n  text-align: center;\n`;\n","import { getTrending } from '../../api/MovieDbApi';\nimport FilmList from '../../components/FilmList/FilmList';\nimport { useState } from 'react';\nimport { Trending } from './Home.styled';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useInView } from 'react-intersection-observer';\nimport Spinner from 'components/Spinner/Spinner';\n\nfunction Home() {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  const { ref } = useInView({\n    \"rootMargin\": \"0px 0px\",\n    onChange: (inView) => {\n      if (inView && hasMore) {\n        setIsLoading(true); \n        getTrending(page).then(({ results, total_pages }) => {\n          if (total_pages === page) {\n            setHasMore(false);\n            return;\n          }\n          setFilms((prev) => [...prev, ...results]);\n          setPage((prev) => prev + 1);\n        })\n        .catch((e) => {\n          toast.error('Oops, try again later')\n        }).finally(() => {\n          setIsLoading(false);\n        })\n      }\n    }\n  });\n\n  return (\n    <>\n      <Trending>Trending Today</Trending>\n      {isLoading && <Spinner/>}\n      <FilmList films={films} />\n      <div style={{height: '1px'}} ref={ref}>\n        {isLoading && films.length > 0 && <Spinner/>}\n      </div>\n      <Toaster position=\"top-right\"/>\n    </>\n  );\n}\n\nexport default Home;"],"names":["axios","API_KEY","getTrending","page","params","api_key","response","data","getFilmById","id","getCastById","getReviewsById","getMovieBySearch","search","query","FilmItem","styled","StyledLink","Link","Poster","Container","films","location","useLocation","map","film","index","to","state","from","src","getImageUrl","poster_path","alt","title","name","imageName","Trending","useState","setFilms","isLoading","setIsLoading","setPage","hasMore","setHasMore","ref","useInView","onChange","inView","then","results","total_pages","prev","catch","e","toast","finally","Spinner","FilmList","style","height","length","position"],"sourceRoot":""}