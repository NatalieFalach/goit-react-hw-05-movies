{"version":3,"file":"static/js/211.705e2118.chunk.js","mappings":"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","sources":["api/MovieDbApi.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","helpers/getImageUrl.js","pages/Home/Home.styled.js","../node_modules/src/observe.ts","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '8b8b26a0b27e03ef23871d035772175e';\n\nexport async function getTrending(page = 1) {\n  const { data: response } = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response;\n}\n\nexport async function getFilmById(id) {\n  const { data: response } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getCastById(id) {\n  const { data: response } = await axios.get(`movie/${id}/credit`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getReviewsById(id) {\n  const { data: response } = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getMovieBySearch(search) {\n  const { data: response } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n  return response;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmItem = styled.li`\n  margin-bottom: 20px;\n  width: 200px;\n  text-decoration: none;\n  text-align: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover {\n    color: orangered;\n  }\n`;\nexport const Poster = styled.img`\n  display: block;\n  margin-bottom: 15px;\n  width: 200px;\n  height: 300px;\n`;\nexport const Container = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n`;\n","import { FilmItem, StyledLink, Poster, Container } from './FilmList.styled';\nimport PropTypes from 'prop-types';\nimport getImageUrl from 'helpers/getImageUrl';\nimport { useLocation } from 'react-router-dom';\nconst FilmList = ({films}) => {\n  const location = useLocation();\n  \n  return (\n    <Container>\n      {films.map((film, index) => {\n        return (\n          <FilmItem key={film.id}>\n            <StyledLink to={`/movies/${film.id}`} state={{ from: location }}>\n              <Poster src={getImageUrl(film.poster_path)} alt={film.title} /> \n              {film.title || film.name}\n            </StyledLink>\n          </FilmItem  >\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default FilmList;\n\nFilmList.propTypes = {\n  films:PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string\n  })).isRequired,\n}","export default function getImageUrl(imageName) {\n  return imageName\n    ? `https://image.tmdb.org/t/p/w500/${imageName}`\n    : 'https://via.placeholder.com/150/d3d3d3/ffffff?text=No++photo';\n}\n","import styled from 'styled-components';\n\nexport const Trending = styled.h2`\n  text-align: center;\n`;\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import { getTrending } from '../../api/MovieDbApi';\nimport FilmList from '../../components/FilmList/FilmList';\nimport { useState } from 'react';\nimport { Trending } from './Home.styled';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useInView } from 'react-intersection-observer';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useEffect } from 'react';\n\nfunction Home() {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const { ref } = useInView({\n    \"rootMargin\": \"400px 0px\",\n    onChange: (inView) => {\n      if (inView) {\n        console.log('View is true increment page, ', page)\n        setPage((prev) => prev + 1)\n        // getTrending(page).then(({ results }) => {\n        //   setFilms((prev) => [...prev, ...results]);  \n        // }).catch((e) => {\n        //   toast.error('Oops, try again later')\n        // })\n      }\n    }\n  });\n\n  useEffect(() => {\n    setIsLoading(true); \n    getTrending(page).then(({ results }) => {\n      setFilms((prev) => [...prev, ...results]);\n    })\n    .catch((e) => {\n      toast.error('Oops, try again later')\n    }).finally(() => {\n      setIsLoading(false);\n    })\n  }, [page])\n\n  return (\n    <>\n      <Trending>Trending Today</Trending>\n      {isLoading && <Spinner/>}\n      <FilmList films={films} />\n      <div ref={ref}></div>\n      <Toaster position=\"top-right\"/>\n    </>\n  );\n}\n\nexport default Home;"],"names":["axios","API_KEY","getTrending","page","params","api_key","response","data","getFilmById","id","getCastById","getReviewsById","getMovieBySearch","search","query","FilmItem","styled","StyledLink","Link","Poster","Container","films","location","useLocation","map","film","index","to","state","from","src","getImageUrl","poster_path","alt","title","name","imageName","Trending","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","defaultFallbackInView","inView","getRootId","root","has","get","set","sort","filter","key","createObserver","instance","some","threshold","Object","intersectionRatio","trackVisibility","isVisible","IntersectionObserver","entries","entry","isIntersecting","forEach","target","callback","Array","element","isArray","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","thresholds","intersectionRect","rootBounds","callbacks","push","observe","unobserve","splice","indexOf","length","delete","size","disconnect","isPlainChildren","props","children","InView","constructor","node","_unobserveCb","handleNode","triggerOnce","setState","keys","initialInView","skip","observeNode","handleChange","onChange","componentDidUpdate","prevProps","observerMap","useState","setFilms","isLoading","setIsLoading","setPage","useEffect","current","ref","as","createElement","entryTarget","setRef","React","useInView","console","log","prev","then","results","catch","e","toast","finally","Spinner","FilmList","position"],"sourceRoot":""}