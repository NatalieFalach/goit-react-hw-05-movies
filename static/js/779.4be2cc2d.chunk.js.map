{"version":3,"file":"static/js/779.4be2cc2d.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAA2BC,EAA3B,+BAAkC,EAAlC,SAC4BH,EAAAA,EAAAA,IAAA,sBAAiC,CAChEI,OAAQ,CACNC,QAASJ,EACTE,KAAMA,KAJL,uBACSG,EADT,EACGC,KADH,kBAOED,GAPF,mEAUA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFAC4BT,EAAAA,EAAAA,IAAA,gBAAmBS,GAAM,CACxDL,OAAQ,CACNC,QAASJ,KAHR,uBACSK,EADT,EACGC,KADH,kBAMED,GANF,kEASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,yFAC4BT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,WAAgC,CAC/DL,OAAQ,CACNC,QAASJ,KAHR,uBACSK,EADT,EACGC,KADH,kBAMED,GANF,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFAC4BT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,YAAiC,CAChEL,OAAQ,CACNC,QAASJ,KAHR,uBACSK,EADT,EACGC,KADH,kBAMED,GANF,kEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFAC4Bb,EAAAA,EAAAA,IAAA,eAA0B,CACzDI,OAAQ,CACNC,QAASJ,EACTa,MAAOD,KAJN,uBACSP,EADT,EACGC,KADH,kBAOED,GAPF,kE,qICzCMS,E,QAAUC,GAAAA,GAAH,kK,SC+CpB,MA1CA,WACE,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaiB,EAAb,KAoBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRJ,GAAa,IAEbV,EAAAA,EAAAA,IAAeM,GAAQS,MAAK,SAACnB,GACtBA,EAAKoB,QAAQC,QAChBL,EAAS,uBAEXC,EAAQjB,EAAKoB,QACd,IAAEE,OAAM,SAACC,GACRC,QAAQC,IAAIF,EAAEG,SACdV,EAAS,0BACV,IAAEW,SAAQ,WACTb,GAAa,EACd,GAEF,GAAE,CAACJ,KAGF,gCACGG,IAAa,SAACe,EAAA,EAAD,IACbb,IAAS,SAACP,EAAD,UAAUO,KACpB,wBACIf,GAAQA,EAAK6B,KAAI,SAACC,GAClB,OACE,2BACE,oCAAYA,EAAKC,WACjB,uBAAID,EAAKE,YAFFF,EAAK5B,GAKjB,QAIR,C","sources":["api/MovieDbApi.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '8b8b26a0b27e03ef23871d035772175e';\n\nexport async function getTrending(page = 1) {\n  const { data: response } = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response;\n}\n\nexport async function getFilmById(id) {\n  const { data: response } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getCastById(id) {\n  const { data: response } = await axios.get(`movie/${id}/credit`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getReviewsById(id) {\n  const { data: response } = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n}\n\nexport async function getMovieBySearch(search) {\n  const { data: response } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n  return response;\n}\n","import styled from 'styled-components';\n\nexport const Massage = styled.h2`\n  text-align: center;\n  border-top: 1px solid black;\n  display: block;\n  margin-top: 10px;\n  padding-top: 20px;\n  color: orangered;\n`;\n","import { getReviewsById } from 'api/MovieDbApi';\nimport Spinner from 'components/Spinner/Spinner';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Massage } from './Reviews.styled'\n\n\nfunction Reviews() {\n  const { filmId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getReviewsById(filmId).then((data) => {\n      if (!data.results.length) {\n        setError('There is no reviews');\n      }\n      setData(data.results);\n    }).catch((e) => {\n      console.log(e.message);\n      setError('Oops... try again later');\n    }).finally(() => {\n      setIsLoading(false);\n    })\n    \n  }, [filmId]);\n  \n  return (\n    <>\n      {isLoading && <Spinner />}\n      {error && <Massage>{error}</Massage>}\n      <ul>\n        { data && data.map((item) => {\n          return (\n            <li key={item.id}>\n              <b>Author: {item.author}</b>\n              <p>{item.content}</p>\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default Reviews;"],"names":["axios","API_KEY","getTrending","page","params","api_key","response","data","getFilmById","id","getCastById","getReviewsById","getMovieBySearch","search","query","Massage","styled","filmId","useParams","useState","isLoading","setIsLoading","error","setError","setData","useEffect","then","results","length","catch","e","console","log","message","finally","Spinner","map","item","author","content"],"sourceRoot":""}